// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package models

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
	"github.com/shopspring/decimal"
	"github.com/stickpro/go-store/internal/constant"
)

type Attribute struct {
	ID               uuid.UUID        `db:"id" json:"id"`
	AttributeGroupID uuid.NullUUID    `db:"attribute_group_id" json:"attribute_group_id"`
	Name             string           `db:"name" json:"name"`
	Value            string           `db:"value" json:"value"`
	Type             string           `db:"type" json:"type"`
	IsFilterable     pgtype.Bool      `db:"is_filterable" json:"is_filterable"`
	IsVisible        pgtype.Bool      `db:"is_visible" json:"is_visible"`
	SortOrder        pgtype.Int4      `db:"sort_order" json:"sort_order"`
	CreatedAt        pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt        pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type AttributeGroup struct {
	ID          uuid.UUID        `db:"id" json:"id"`
	Name        string           `db:"name" json:"name"`
	Description pgtype.Text      `db:"description" json:"description"`
	CreatedAt   pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt   pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type Category struct {
	ID              uuid.UUID        `db:"id" json:"id"`
	ParentID        uuid.NullUUID    `db:"parent_id" json:"parent_id"`
	Name            string           `db:"name" json:"name"`
	Slug            string           `db:"slug" json:"slug"`
	Description     pgtype.Text      `db:"description" json:"description"`
	ImagePath       pgtype.Text      `db:"image_path" json:"image_path"`
	MetaTitle       pgtype.Text      `db:"meta_title" json:"meta_title"`
	MetaH1          pgtype.Text      `db:"meta_h1" json:"meta_h1"`
	MetaDescription pgtype.Text      `db:"meta_description" json:"meta_description"`
	MetaKeyword     pgtype.Text      `db:"meta_keyword" json:"meta_keyword"`
	IsEnable        bool             `db:"is_enable" json:"is_enable"`
	CreatedAt       pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt       pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type City struct {
	ID              uuid.UUID       `db:"id" json:"id"`
	Address         string          `db:"address" json:"address"`
	PostalCode      string          `db:"postal_code" json:"postal_code"`
	Country         string          `db:"country" json:"country"`
	FederalDistrict string          `db:"federal_district" json:"federal_district"`
	RegionType      string          `db:"region_type" json:"region_type"`
	Region          string          `db:"region" json:"region"`
	AreaType        pgtype.Text     `db:"area_type" json:"area_type"`
	Area            pgtype.Text     `db:"area" json:"area"`
	CityType        string          `db:"city_type" json:"city_type"`
	City            string          `db:"city" json:"city"`
	SettlementType  pgtype.Text     `db:"settlement_type" json:"settlement_type"`
	Settlement      pgtype.Text     `db:"settlement" json:"settlement"`
	KladrID         string          `db:"kladr_id" json:"kladr_id"`
	FiasID          uuid.UUID       `db:"fias_id" json:"fias_id"`
	FiasLevel       int16           `db:"fias_level" json:"fias_level"`
	CapitalMarker   int16           `db:"capital_marker" json:"capital_marker"`
	Okato           string          `db:"okato" json:"okato"`
	Oktmo           string          `db:"oktmo" json:"oktmo"`
	TaxOffice       string          `db:"tax_office" json:"tax_office"`
	Timezone        string          `db:"timezone" json:"timezone"`
	GeoLat          decimal.Decimal `db:"geo_lat" json:"geo_lat"`
	GeoLon          decimal.Decimal `db:"geo_lon" json:"geo_lon"`
	Population      int64           `db:"population" json:"population"`
	FoundationYear  int16           `db:"foundation_year" json:"foundation_year"`
}

type Collection struct {
	ID          uuid.UUID          `db:"id" json:"id"`
	Name        string             `db:"name" json:"name"`
	Description pgtype.Text        `db:"description" json:"description"`
	Slug        string             `db:"slug" json:"slug"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type CollectionProduct struct {
	CollectionID uuid.UUID `db:"collection_id" json:"collection_id"`
	ProductID    uuid.UUID `db:"product_id" json:"product_id"`
}

type Manufacturer struct {
	ID              uuid.UUID        `db:"id" json:"id"`
	Name            string           `db:"name" json:"name"`
	Slug            string           `db:"slug" json:"slug"`
	Description     pgtype.Text      `db:"description" json:"description"`
	ImagePath       pgtype.Text      `db:"image_path" json:"image_path"`
	MetaTitle       pgtype.Text      `db:"meta_title" json:"meta_title"`
	MetaH1          pgtype.Text      `db:"meta_h1" json:"meta_h1"`
	MetaDescription pgtype.Text      `db:"meta_description" json:"meta_description"`
	MetaKeyword     pgtype.Text      `db:"meta_keyword" json:"meta_keyword"`
	IsEnable        bool             `db:"is_enable" json:"is_enable"`
	CreatedAt       pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt       pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type Medium struct {
	ID        uuid.UUID        `db:"id" json:"id"`
	Name      string           `db:"name" json:"name"`
	Path      string           `db:"path" json:"path"`
	FileName  string           `db:"file_name" json:"file_name"`
	MimeType  string           `db:"mime_type" json:"mime_type"`
	DiskType  string           `db:"disk_type" json:"disk_type"`
	Size      int64            `db:"size" json:"size"`
	CreatedAt pgtype.Timestamp `db:"created_at" json:"created_at"`
}

type PersonalAccessToken struct {
	ID            uuid.UUID        `db:"id" json:"id"`
	TokenableType string           `db:"tokenable_type" json:"tokenable_type"`
	TokenableID   uuid.UUID        `db:"tokenable_id" json:"tokenable_id"`
	Name          string           `db:"name" json:"name"`
	Token         string           `db:"token" json:"token"`
	LastUsedAt    pgtype.Timestamp `db:"last_used_at" json:"last_used_at"`
	ExpiresAt     *time.Time       `db:"expires_at" json:"expires_at"`
	CreatedAt     pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt     pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type Product struct {
	ID              uuid.UUID            `db:"id" json:"id"`
	Name            string               `db:"name" json:"name"`
	Model           string               `db:"model" json:"model"`
	Slug            string               `db:"slug" json:"slug"`
	Description     pgtype.Text          `db:"description" json:"description"`
	MetaTitle       pgtype.Text          `db:"meta_title" json:"meta_title"`
	MetaH1          pgtype.Text          `db:"meta_h1" json:"meta_h1"`
	MetaDescription pgtype.Text          `db:"meta_description" json:"meta_description"`
	MetaKeyword     pgtype.Text          `db:"meta_keyword" json:"meta_keyword"`
	Sku             pgtype.Text          `db:"sku" json:"sku"`
	Upc             pgtype.Text          `db:"upc" json:"upc"`
	Ean             pgtype.Text          `db:"ean" json:"ean"`
	Jan             pgtype.Text          `db:"jan" json:"jan"`
	Isbn            pgtype.Text          `db:"isbn" json:"isbn"`
	Mpn             pgtype.Text          `db:"mpn" json:"mpn"`
	Location        pgtype.Text          `db:"location" json:"location"`
	Quantity        int64                `db:"quantity" json:"quantity"`
	StockStatus     constant.StockStatus `db:"stock_status" json:"stock_status"`
	Image           pgtype.Text          `db:"image" json:"image"`
	ManufacturerID  uuid.NullUUID        `db:"manufacturer_id" json:"manufacturer_id"`
	Price           decimal.Decimal      `db:"price" json:"price"`
	Weight          decimal.Decimal      `db:"weight" json:"weight"`
	Length          decimal.Decimal      `db:"length" json:"length"`
	Width           decimal.Decimal      `db:"width" json:"width"`
	Height          decimal.Decimal      `db:"height" json:"height"`
	Subtract        bool                 `db:"subtract" json:"subtract"`
	Minimum         int64                `db:"minimum" json:"minimum"`
	SortOrder       int32                `db:"sort_order" json:"sort_order"`
	IsEnable        bool                 `db:"is_enable" json:"is_enable"`
	Viewed          int64                `db:"viewed" json:"viewed"`
	CreatedAt       pgtype.Timestamp     `db:"created_at" json:"created_at"`
	UpdatedAt       pgtype.Timestamp     `db:"updated_at" json:"updated_at"`
}

type ProductMedium struct {
	ProductID uuid.UUID `db:"product_id" json:"product_id"`
	MediaID   uuid.UUID `db:"media_id" json:"media_id"`
	SortOrder int32     `db:"sort_order" json:"sort_order"`
}

type User struct {
	ID              uuid.UUID        `db:"id" json:"id"`
	Email           string           `db:"email" json:"email" validate:"required,email"`
	EmailVerifiedAt pgtype.Timestamp `db:"email_verified_at" json:"email_verified_at"`
	Password        string           `db:"password" json:"password" validate:"required,min=8,max=32"`
	RememberToken   pgtype.Text      `db:"remember_token" json:"remember_token"`
	Location        string           `db:"location" json:"location" validate:"required,timezone"`
	Language        string           `db:"language" json:"language"`
	CreatedAt       pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt       pgtype.Timestamp `db:"updated_at" json:"updated_at"`
	DeletedAt       pgtype.Timestamp `db:"deleted_at" json:"deleted_at"`
	IsAdmin         pgtype.Bool      `db:"is_admin" json:"is_admin"`
	Banned          pgtype.Bool      `db:"banned" json:"banned"`
}
