basePath: /api
definitions:
  APIError:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
  APIErrors:
    properties:
      code:
        type: integer
      errors:
        items:
          $ref: '#/definitions/APIError'
        type: array
    type: object
  AuthRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  AuthResponse:
    properties:
      token:
        type: string
    type: object
  CategoryResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      image_path:
        type: string
      is_enabled:
        type: boolean
      meta_description:
        type: string
      meta_h1:
        type: string
      meta_keywords:
        type: string
      meta_title:
        type: string
      name:
        type: string
      parent_id:
        type: string
      slug:
        type: string
      updated_at:
        type: string
    type: object
  CreateCategoryRequest:
    properties:
      description:
        minLength: 1
        type: string
      image_path:
        minLength: 1
        type: string
      is_enabled:
        type: boolean
      meta_description:
        minLength: 1
        type: string
      meta_h1:
        minLength: 1
        type: string
      meta_keyword:
        minLength: 1
        type: string
      meta_title:
        minLength: 1
        type: string
      name:
        maxLength: 255
        minLength: 1
        type: string
      parent_id:
        type: string
      slug:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - name
    - slug
    type: object
  CreateManufacturerRequest:
    properties:
      description:
        minLength: 1
        type: string
      image_path:
        minLength: 1
        type: string
      is_enabled:
        type: boolean
      meta_description:
        minLength: 1
        type: string
      meta_h1:
        minLength: 1
        type: string
      meta_keyword:
        minLength: 1
        type: string
      meta_title:
        minLength: 1
        type: string
      name:
        maxLength: 255
        minLength: 1
        type: string
      slug:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - name
    - slug
    type: object
  CreateProductRequest:
    properties:
      description:
        type: string
      ean:
        type: string
      height:
        type: number
      image:
        type: string
      is_enable:
        type: boolean
      isbn:
        type: string
      jan:
        type: string
      length:
        type: number
      location:
        type: string
      manufacturer_id:
        type: string
      meta_description:
        type: string
      meta_h1:
        type: string
      meta_keyword:
        type: string
      meta_title:
        type: string
      minimum:
        type: integer
      model:
        type: string
      mpn:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      sku:
        type: string
      slug:
        type: string
      sort_order:
        type: integer
      stock_status:
        type: string
      subtract:
        type: boolean
      upc:
        type: string
      weight:
        type: number
      width:
        type: number
    required:
    - height
    - is_enable
    - length
    - minimum
    - model
    - name
    - price
    - slug
    - sort_order
    - weight
    - width
    type: object
  FullPagingData:
    properties:
      last_page:
        type: integer
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  JSONResponse-AuthResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/AuthResponse'
      message:
        type: string
    type: object
  JSONResponse-CategoryResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/CategoryResponse'
      message:
        type: string
    type: object
  JSONResponse-ManufacturerResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ManufacturerResponse'
      message:
        type: string
    type: object
  JSONResponse-MediumResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/MediumResponse'
      message:
        type: string
    type: object
  JSONResponse-ProductResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ProductResponse'
      message:
        type: string
    type: object
  JSONResponse-RegisterUserResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/RegisterUserResponse'
      message:
        type: string
    type: object
  JSONResponse-ResponseWithFullPagination-github_com_stickpro_go-store_internal_storage_repository_repository_categories_FindRow:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ResponseWithFullPagination-github_com_stickpro_go-store_internal_storage_repository_repository_categories_FindRow'
      message:
        type: string
    type: object
  JSONResponse-ResponseWithFullPagination-github_com_stickpro_go-store_internal_storage_repository_repository_products_FindRow:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ResponseWithFullPagination-github_com_stickpro_go-store_internal_storage_repository_repository_products_FindRow'
      message:
        type: string
    type: object
  JSONResponse-UserInfoResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/UserInfoResponse'
      message:
        type: string
    type: object
  ManufacturerResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      image_path:
        type: string
      is_enabled:
        type: boolean
      meta_description:
        type: string
      meta_h1:
        type: string
      meta_keywords:
        type: string
      meta_title:
        type: string
      name:
        type: string
      slug:
        type: string
      updated_at:
        type: string
    type: object
  MediumResponse:
    properties:
      created_at:
        type: string
      disk_type:
        type: string
      file_name:
        type: string
      id:
        type: string
      mime_type:
        type: string
      name:
        type: string
      path:
        type: string
      size:
        type: integer
    type: object
  ProductResponse:
    properties:
      description:
        type: string
      ean:
        type: string
      height:
        type: number
      id:
        type: string
      image:
        type: string
      is_enable:
        type: boolean
      isbn:
        type: string
      jan:
        type: string
      length:
        type: number
      location:
        type: string
      manufacturer_id:
        $ref: '#/definitions/uuid.NullUUID'
      meta_description:
        type: string
      meta_h1:
        type: string
      meta_keyword:
        type: string
      meta_title:
        type: string
      minimum:
        type: integer
      model:
        type: string
      mpn:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      sku:
        type: string
      slug:
        type: string
      sort_order:
        type: integer
      stock_status:
        type: string
      subtract:
        type: boolean
      upc:
        type: string
      weight:
        type: number
      width:
        type: number
    type: object
  RegisterRequest:
    properties:
      email:
        type: string
      language:
        maxLength: 2
        minLength: 2
        type: string
      location:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - language
    - location
    - password
    type: object
  RegisterUserResponse:
    properties:
      token:
        type: string
    type: object
  ResponseWithFullPagination-github_com_stickpro_go-store_internal_storage_repository_repository_categories_FindRow:
    properties:
      items:
        items:
          $ref: '#/definitions/github_com_stickpro_go-store_internal_storage_repository_repository_categories.FindRow'
        type: array
      pagination:
        $ref: '#/definitions/FullPagingData'
    type: object
  ResponseWithFullPagination-github_com_stickpro_go-store_internal_storage_repository_repository_products_FindRow:
    properties:
      items:
        items:
          $ref: '#/definitions/github_com_stickpro_go-store_internal_storage_repository_repository_products.FindRow'
        type: array
      pagination:
        $ref: '#/definitions/FullPagingData'
    type: object
  UpdateCategoryRequest:
    properties:
      description:
        minLength: 1
        type: string
      image_path:
        minLength: 1
        type: string
      is_enabled:
        type: boolean
      meta_description:
        minLength: 1
        type: string
      meta_h1:
        minLength: 1
        type: string
      meta_keyword:
        minLength: 1
        type: string
      meta_title:
        minLength: 1
        type: string
      name:
        maxLength: 255
        minLength: 1
        type: string
      parent_id:
        type: string
      slug:
        maxLength: 255
        minLength: 1
        type: string
    type: object
  UpdateManufacturerRequest:
    properties:
      description:
        minLength: 1
        type: string
      image_path:
        minLength: 1
        type: string
      is_enabled:
        type: boolean
      meta_description:
        minLength: 1
        type: string
      meta_h1:
        minLength: 1
        type: string
      meta_keyword:
        minLength: 1
        type: string
      meta_title:
        minLength: 1
        type: string
      name:
        maxLength: 255
        minLength: 1
        type: string
      slug:
        maxLength: 255
        minLength: 1
        type: string
    type: object
  UpdateProductRequest:
    properties:
      description:
        type: string
      ean:
        type: string
      height:
        type: number
      image:
        type: string
      is_enable:
        type: boolean
      isbn:
        type: string
      jan:
        type: string
      length:
        type: number
      location:
        type: string
      manufacturer_id:
        type: string
      meta_description:
        type: string
      meta_h1:
        type: string
      meta_keyword:
        type: string
      meta_title:
        type: string
      minimum:
        type: integer
      model:
        type: string
      mpn:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      sku:
        type: string
      slug:
        type: string
      sort_order:
        type: integer
      stock_status:
        type: string
      subtract:
        type: boolean
      upc:
        type: string
      weight:
        type: number
      width:
        type: number
    type: object
  UserInfoResponse:
    properties:
      created_at:
        format: date-time
        type: string
      email:
        format: email
        type: string
      email_verified_at:
        format: date-time
        type: string
      id:
        format: uuid
        type: string
      is_admin:
        type: boolean
      language:
        type: string
      location:
        type: string
      updated_at:
        format: date-time
        type: string
    required:
    - email
    - location
    type: object
  github_com_stickpro_go-store_internal_constant.StockStatus:
    enum:
    - IN_STOCK
    - PRE_ORDER
    - OUT_OF_STOCK
    type: string
    x-enum-varnames:
    - InStock
    - PreOrder
    - OutOfStock
  github_com_stickpro_go-store_internal_storage_repository_repository_categories.FindRow:
    properties:
      created_at:
        $ref: '#/definitions/pgtype.Timestamp'
      description:
        $ref: '#/definitions/pgtype.Text'
      id:
        type: string
      image_path:
        $ref: '#/definitions/pgtype.Text'
      is_enable:
        type: boolean
      meta_description:
        $ref: '#/definitions/pgtype.Text'
      meta_h1:
        $ref: '#/definitions/pgtype.Text'
      meta_keyword:
        $ref: '#/definitions/pgtype.Text'
      meta_title:
        $ref: '#/definitions/pgtype.Text'
      name:
        type: string
      parent_id:
        $ref: '#/definitions/uuid.NullUUID'
      slug:
        type: string
      updated_at:
        $ref: '#/definitions/pgtype.Timestamp'
    type: object
  github_com_stickpro_go-store_internal_storage_repository_repository_products.FindRow:
    properties:
      created_at:
        $ref: '#/definitions/pgtype.Timestamp'
      description:
        $ref: '#/definitions/pgtype.Text'
      ean:
        $ref: '#/definitions/pgtype.Text'
      height:
        type: number
      id:
        type: string
      image:
        $ref: '#/definitions/pgtype.Text'
      is_enable:
        type: boolean
      isbn:
        $ref: '#/definitions/pgtype.Text'
      jan:
        $ref: '#/definitions/pgtype.Text'
      length:
        type: number
      location:
        $ref: '#/definitions/pgtype.Text'
      manufacturer_id:
        $ref: '#/definitions/uuid.NullUUID'
      meta_description:
        $ref: '#/definitions/pgtype.Text'
      meta_h1:
        $ref: '#/definitions/pgtype.Text'
      meta_keyword:
        $ref: '#/definitions/pgtype.Text'
      meta_title:
        $ref: '#/definitions/pgtype.Text'
      minimum:
        type: integer
      model:
        type: string
      mpn:
        $ref: '#/definitions/pgtype.Text'
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      sku:
        $ref: '#/definitions/pgtype.Text'
      slug:
        type: string
      sort_order:
        type: integer
      stock_status:
        $ref: '#/definitions/github_com_stickpro_go-store_internal_constant.StockStatus'
      subtract:
        type: boolean
      upc:
        $ref: '#/definitions/pgtype.Text'
      updated_at:
        $ref: '#/definitions/pgtype.Timestamp'
      viewed:
        type: integer
      weight:
        type: number
      width:
        type: number
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Text:
    properties:
      string:
        type: string
      valid:
        type: boolean
    type: object
  pgtype.Timestamp:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        description: Time zone will be ignored when encoding to PostgreSQL.
        type: string
      valid:
        type: boolean
    type: object
  uuid.NullUUID:
    properties:
      uuid:
        type: string
      valid:
        description: Valid is true if UUID is not NULL
        type: boolean
    type: object
info:
  contact:
    email: go-store@stick.sh
    name: Vladislav B
  description: This is an API for go-store
  title: GO-store
  version: "1.0"
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Auth a user
      parameters:
      - description: Register account
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Auth user
      tags:
      - Auth
  /v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register account
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-RegisterUserResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Register user
      tags:
      - Auth
  /v1/category/:
    get:
      consumes:
      - application/json
      description: Get categories
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ResponseWithFullPagination-github_com_stickpro_go-store_internal_storage_repository_repository_categories_FindRow'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get categories
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Create category
      parameters:
      - description: Create category
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Create Category
      tags:
      - Category
  /v1/category/:id:
    put:
      consumes:
      - application/json
      description: Update category
      parameters:
      - description: Update category
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/UpdateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Update Category
      tags:
      - Category
  /v1/category/:slug/:
    get:
      consumes:
      - application/json
      description: Get category by slug
      parameters:
      - description: Category Slug
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Category
      tags:
      - Category
  /v1/category/id/:id/:
    get:
      consumes:
      - application/json
      description: Get category by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Category
      tags:
      - Category
  /v1/manufacturer/:
    post:
      consumes:
      - application/json
      description: Create Manufacturer
      parameters:
      - description: Create manufacturer
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/CreateManufacturerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ManufacturerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Create Manufacturer
      tags:
      - Manufacturer
  /v1/manufacturer/:id:
    put:
      consumes:
      - application/json
      description: Update Manufacturer
      parameters:
      - description: Update manufacturer
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/UpdateManufacturerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ManufacturerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Update Manufacturer
      tags:
      - Manufacturer
  /v1/manufacturer/:slug/:
    get:
      consumes:
      - application/json
      description: Get Manufacturer by slug
      parameters:
      - description: Manufacturer Slug
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ManufacturerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Manufacturer
      tags:
      - Manufacturer
  /v1/manufacturer/id/:id/:
    get:
      consumes:
      - application/json
      description: Get Manufacturer by ID
      parameters:
      - description: Manufacturer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ManufacturerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Manufacturer
      tags:
      - Manufacturer
  /v1/media/upload:
    post:
      consumes:
      - multipart/form-data
      description: Allows users to upload files of specific types (JPEG, PDF, WEBP)
      parameters:
      - description: File to upload
        in: formData
        name: document
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-MediumResponse'
        "400":
          description: Unsupported file type
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Upload file
      tags:
      - Files
  /v1/product/:
    get:
      consumes:
      - application/json
      description: Get products
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ResponseWithFullPagination-github_com_stickpro_go-store_internal_storage_repository_repository_products_FindRow'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Get products
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create product
      parameters:
      - description: Create product
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/CreateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Create Product
      tags:
      - Product
  /v1/product/:id:
    put:
      consumes:
      - application/json
      description: Update product
      parameters:
      - description: Update product
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Update Product
      tags:
      - Product
  /v1/product/:slug/:
    get:
      consumes:
      - application/json
      description: Get product by slug
      parameters:
      - description: Product Slug
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Product
      tags:
      - Product
  /v1/product/id/:id/:
    get:
      consumes:
      - application/json
      description: Get product by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIErrors'
      summary: Product
      tags:
      - Product
  /v1/user:
    get:
      consumes:
      - application/json
      description: Auth a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse-UserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIErrors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIErrors'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/APIErrors'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/APIErrors'
      security:
      - BearerAuth: []
      summary: Auth user
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
